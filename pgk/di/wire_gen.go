// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package di

import (
	"github.com/dhis2-sre/go-rate-limite/pgk/config"
	"github.com/dhis2-sre/go-rate-limite/pgk/handler"
	"github.com/dhis2-sre/go-rate-limite/pgk/proxy"
	"github.com/dhis2-sre/go-rate-limite/pgk/rule"
	"log"
)

// Injectors from wire.go:

func GetApplication() Application {
	config := provideConfigWithoutError()
	rules := rule.ProvideRules(config)
	proxyProxy := proxy.ProvideProxy(config)
	handlerHandler := handler.ProvideHandler(config, rules, proxyProxy)
	application := ProvideApplication(config, handlerHandler)
	return application
}

// wire.go:

type Application struct {
	Config  *config.Config
	Handler handler.Handler
}

func ProvideApplication(c *config.Config, h handler.Handler) Application {
	return Application{c, h}
}

func provideConfigWithoutError() *config.Config {
	c, err := config.ProvideConfig()
	if err != nil {
		log.Fatal(err)
	}
	return c
}
